https://www.hackerrank.com/challenges/finding-the-percentage/problem

The provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. 
Print the average of the marks array for the student name provided, showing 2 places after the decimal.

if __name__ == '__main__':
    n = int(input())
    student_marks = {}
    for _ in range(n):
        name, *line = input().split()
        scores = list(map(float, line))
        student_marks[name] = scores
    query_name = input()

    if query_name in student_marks:
        x = ((float(student_marks[query_name][0]) + float(student_marks[query_name][1]) + float(student_marks[query_name][2])) / 3)
    
    print('%.2f' % x)
    
    
    "%.2f"
print("%.2f" % total)

“print” treats the % as a special character you need to add, so it can know, that when you type “f”, 
the number (result) that will be printed will be a floating point type, and the “.2” tells your “print” to print only the first 2 digits after the point.

n = int(input())
student_marks = {}
for _ in range(n):
    name, *line = input().split() <--- doubt
    scores = list(map(float, line)) <--- doubt
    student_marks[name] = scores

print (student_marks)

name, *line = input().split() <--- doubt

input()  # reads single line of input
# 'abc 23 34 45'

.split()  # splits it into a list of whitespace separated tokens
# ['abc', '23', '34', '45']

name, *line = ...  # name is assigned first token, line a list of the remaining tokens
name  # 'abc'
line  #  ['23', '34', '45']

scores = list(map(float, line))  # maps float function onto the list of strings
scores  # [23.0, 34.0, 45.0]

